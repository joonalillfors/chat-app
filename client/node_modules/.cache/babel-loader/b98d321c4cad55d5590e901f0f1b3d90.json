{"ast":null,"code":"import _toConsumableArray from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/joona/git/chat-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { getAName } from './usernames';\nvar socket = io('http://localhost:3001');\n\nvar Messages = function Messages(_ref) {\n  var app = _ref.app;\n  return React.createElement(\"ul\", {\n    id: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, app.state.messages.map(function (msg) {\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, msg);\n  }));\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.send = function (event) {\n      event.preventDefault();\n      socket.emit('chat message', _this.state.user + ': ' + _this.state.message);\n\n      _this.setState({\n        message: ''\n      });\n\n      socket.on('chat message', function (msg) {\n        _this.setState(function (prev) {\n          return {\n            messages: _toConsumableArray(prev.messages).concat([msg])\n          };\n        });\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        message: event.target.value\n      });\n    };\n\n    _this.state = {\n      persons: [],\n      messages: [],\n      message: '',\n      user: getAName()\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Messages, {\n        app: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(Messages, {\n        app: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        action: \"\",\n        onSubmit: this.send,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"m\",\n        autocomplete: \"off\",\n        value: this.state.message,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Send\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/joona/git/chat-app/client/src/App.js"],"names":["React","Component","io","getAName","socket","Messages","app","state","messages","map","msg","App","props","send","event","preventDefault","emit","user","message","setState","on","prev","handleChange","target","value","persons"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,IAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAD,CAAjB;;AAEA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,OAAW;AAAA,MAATC,GAAS,QAATA,GAAS;AAC1B,SACE;AAAI,IAAA,EAAE,EAAC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmBC,GAAnB,CAAuB,UAAAC,GAAG;AAAA,WACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,GAAL,CADyB;AAAA,GAA1B,CADH,CADF;AAOD,CARD;;IAUMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,UAUnBC,IAVmB,GAUZ,UAACC,KAAD,EAAW;AAChBA,MAAAA,KAAK,CAACC,cAAN;AACAX,MAAAA,MAAM,CAACY,IAAP,CAAY,cAAZ,EAA4B,MAAKT,KAAL,CAAWU,IAAX,GAAkB,IAAlB,GAAuB,MAAKV,KAAL,CAAWW,OAA9D;;AACA,YAAKC,QAAL,CAAc;AAACD,QAAAA,OAAO,EAAE;AAAV,OAAd;;AACAd,MAAAA,MAAM,CAACgB,EAAP,CAAU,cAAV,EAA0B,UAACV,GAAD,EAAS;AACjC,cAAKS,QAAL,CAAc,UAAAE,IAAI;AAAA,iBAAK;AACrBb,YAAAA,QAAQ,qBAAMa,IAAI,CAACb,QAAX,UAAqBE,GAArB;AADa,WAAL;AAAA,SAAlB;AAGD,OAJD;AAKD,KAnBkB;;AAAA,UAqBnBY,YArBmB,GAqBJ,UAACR,KAAD,EAAW;AACxB,YAAKK,QAAL,CAAc;AAACD,QAAAA,OAAO,EAAEJ,KAAK,CAACS,MAAN,CAAaC;AAAvB,OAAd;AACD,KAvBkB;;AAEjB,UAAKjB,KAAL,GAAa;AACXkB,MAAAA,OAAO,EAAE,EADE;AAEXjB,MAAAA,QAAQ,EAAE,EAFC;AAGXU,MAAAA,OAAO,EAAE,EAHE;AAIXD,MAAAA,IAAI,EAAEd,QAAQ;AAJH,KAAb;AAFiB;AAQlB;;;;6BAkBQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL,CADF,EACmC,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADnC,EAEE;AAAM,QAAA,MAAM,EAAC,EAAb;AAAgB,QAAA,QAAQ,EAAE,KAAKU,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,EAAE,EAAC,GADL;AAEE,QAAA,YAAY,EAAC,KAFf;AAGE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWW,OAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKI,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAFF,CADF;AAcD;;;;EA1CerB,S;;AA6ClB,eAAeU,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport io from 'socket.io-client'\nimport './App.css'\nimport {getAName} from './usernames'\n\nconst socket = io('http://localhost:3001')\n\nconst Messages = ({app}) => {\n  return (\n    <ul id='messages'>\n      {app.state.messages.map(msg => \n        <li>{msg}</li>\n      )}\n    </ul>\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      messages: [],\n      message: '',\n      user: getAName()\n    }\n  }\n\n  send = (event) => {\n    event.preventDefault()\n    socket.emit('chat message', this.state.user + ': '+this.state.message)\n    this.setState({message: ''})\n    socket.on('chat message', (msg) => {\n      this.setState(prev => ({\n        messages: [...prev.messages, msg]\n      }))\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({message: event.target.value})\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ul ><Messages app={this} /></ul><Messages app={this} />\n        <form action=\"\" onSubmit={this.send}>\n          <input \n            id=\"m\" \n            autocomplete=\"off\" \n            value={this.state.message} \n            onChange={this.handleChange}\n          />\n          <button>Send</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}