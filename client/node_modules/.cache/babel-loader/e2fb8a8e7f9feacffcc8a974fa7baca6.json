{"ast":null,"code":"import _classCallCheck from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/joona/git/chat-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { getAName } from './usernames';\nimport { connect } from 'react-redux';\nimport Messages from './components/messages';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.sendIn = function (event) {\n      event.preventDefault();\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          user = _this$props.user,\n          message = _this$props.message;\n      dispatch({\n        type: 'chat message',\n        msg: user + ': ' + message\n      }); //sendToServer(user+': '+message)\n    };\n\n    _this.handleChange = function (event) {\n      var dispatch = _this.props.dispatch;\n      dispatch({\n        type: 'typing',\n        msg: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dispatch = this.props.dispatch;\n      var name = getAName();\n      dispatch({\n        type: 'username',\n        name: name\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          message = _this$props2.message,\n          messages = _this$props2.messages;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Messages, {\n        messages: messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        action: \"\",\n        onSubmit: this.sendIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"m\",\n        autoComplete: \"off\",\n        value: message,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Send\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    persons: state.persons,\n    messages: state.messages,\n    message: state.message,\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/joona/git/chat-app/client/src/App.js"],"names":["React","Component","getAName","connect","Messages","App","sendIn","event","preventDefault","props","dispatch","user","message","type","msg","handleChange","target","value","name","messages","mapStateToProps","state","persons"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;IAEMC,G;;;;;;;;;;;;;;;;;;UAOJC,M,GAAS,UAACC,KAAD,EAAW;AAClBA,MAAAA,KAAK,CAACC,cAAN;AADkB,wBAEgB,MAAKC,KAFrB;AAAA,UAEXC,QAFW,eAEXA,QAFW;AAAA,UAEDC,IAFC,eAEDA,IAFC;AAAA,UAEKC,OAFL,eAEKA,OAFL;AAGlBF,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAE,cAAP;AAAuBC,QAAAA,GAAG,EAAEH,IAAI,GAAC,IAAL,GAAUC;AAAtC,OAAD,CAAR,CAHkB,CAIlB;AACD,K;;UAEDG,Y,GAAe,UAACR,KAAD,EAAW;AAAA,UACjBG,QADiB,GACL,MAAKD,KADA,CACjBC,QADiB;AAExBA,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAE,QAAP;AAAiBC,QAAAA,GAAG,EAAEP,KAAK,CAACS,MAAN,CAAaC;AAAnC,OAAD,CAAR;AACD,K;;;;;;;wCAhBmB;AAAA,UACXP,QADW,GACC,KAAKD,KADN,CACXC,QADW;AAElB,UAAMQ,IAAI,GAAGhB,QAAQ,EAArB;AACAQ,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAE,UAAP;AAAmBK,QAAAA,IAAI,EAAJA;AAAnB,OAAD,CAAR;AACD;;;6BAcQ;AAAA,yBACqB,KAAKT,KAD1B;AAAA,UACAG,OADA,gBACAA,OADA;AAAA,UACSO,QADT,gBACSA,QADT;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,MAAM,EAAC,EAAb;AAAgB,QAAA,QAAQ,EAAE,KAAKb,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,EAAE,EAAC,GADL;AAEE,QAAA,YAAY,EAAC,KAFf;AAGE,QAAA,KAAK,EAAEM,OAHT;AAIE,QAAA,QAAQ,EAAE,KAAKG,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAFF,CADF;AAcD;;;;EAnCed,S;;AAsClB,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADiB;AAEhCH,IAAAA,QAAQ,EAAEE,KAAK,CAACF,QAFgB;AAGhCP,IAAAA,OAAO,EAAES,KAAK,CAACT,OAHiB;AAIhCD,IAAAA,IAAI,EAAEU,KAAK,CAACV;AAJoB,GAAL;AAAA,CAA7B;;AAOA,eAAeR,OAAO,CAACiB,eAAD,CAAP,CAAyBf,GAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport {getAName} from './usernames'\nimport {connect} from 'react-redux'\nimport Messages from './components/messages'\n\nclass App extends Component {\n  componentDidMount() {\n    const {dispatch} = this.props\n    const name = getAName()\n    dispatch({type: 'username', name})\n  }\n\n  sendIn = (event) => {\n    event.preventDefault()\n    const {dispatch, user, message} = this.props\n    dispatch({type: 'chat message', msg: user+': '+message})\n    //sendToServer(user+': '+message)\n  }\n\n  handleChange = (event) => {\n    const {dispatch} = this.props\n    dispatch({type: 'typing', msg: event.target.value})\n  }\n\n  render() {\n    const {message, messages} = this.props\n    return (\n      <div className=\"App\">\n        <Messages messages={messages}/>\n        <form action=\"\" onSubmit={this.sendIn}>\n          <input \n            id=\"m\" \n            autoComplete=\"off\" \n            value={message} \n            onChange={this.handleChange}\n          />\n          <button >Send</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  persons: state.persons,\n  messages: state.messages,\n  message: state.message,\n  user: state.user\n})\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}