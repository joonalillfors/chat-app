{"ast":null,"code":"var _jsxFileName = \"/Users/joona/git/chat-app/client/src/components/input.js\";\nimport React from 'react';\nimport EmojiConvertor from 'emoji-js';\nimport EmojiBox from './emoji';\n\nvar InputBar = function InputBar(_ref) {\n  var app = _ref.app;\n\n  var emojiClick = function emojiClick(code, emoji) {\n    var _app$props = app.props,\n        dispatch = _app$props.dispatch,\n        message = _app$props.message;\n    var emojiPic = new EmojiConvertor().replace_colons(\":\".concat(emoji.name, \":\"));\n    dispatch({\n      type: 'typing',\n      msg: message + emojiPic\n    });\n    document.getElementById(\"m\").focus();\n  };\n\n  var toggleEmojiBox = function toggleEmojiBox() {\n    app.setState({\n      emoji: !app.state.emoji\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(EmojiBox, {\n    onEmojiClick: emojiClick,\n    visible: app.state.emoji,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: app.sendIn,\n    className: \"message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"m\",\n    autoComplete: \"off\",\n    value: app.props.message,\n    onChange: app.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    onClick: toggleEmojiBox,\n    id: \"emoji\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"far fa-grin fa-2x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Send\")));\n};\n\nexport default InputBar;","map":{"version":3,"sources":["/Users/joona/git/chat-app/client/src/components/input.js"],"names":["React","EmojiConvertor","EmojiBox","InputBar","app","emojiClick","code","emoji","props","dispatch","message","emojiPic","replace_colons","name","type","msg","document","getElementById","focus","toggleEmojiBox","setState","state","sendIn","handleChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,UAA3B;AACA,OAAOC,QAAP,MAAqB,SAArB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAW;AAAA,MAATC,GAAS,QAATA,GAAS;;AACxB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,KAAP,EAAiB;AAAA,qBACJH,GAAG,CAACI,KADA;AAAA,QACzBC,QADyB,cACzBA,QADyB;AAAA,QACfC,OADe,cACfA,OADe;AAEhC,QAAIC,QAAQ,GAAG,IAAIV,cAAJ,GAAqBW,cAArB,YAAwCL,KAAK,CAACM,IAA9C,OAAf;AACAJ,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,GAAG,EAAEL,OAAO,GAACC;AAA9B,KAAD,CAAR;AACAK,IAAAA,QAAQ,CAACC,cAAT,CAAwB,GAAxB,EAA6BC,KAA7B;AACH,GALD;;AAOA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBf,IAAAA,GAAG,CAACgB,QAAJ,CAAa;AAACb,MAAAA,KAAK,EAAE,CAACH,GAAG,CAACiB,KAAJ,CAAUd;AAAnB,KAAb;AACH,GAFD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,YAAY,EAAEF,UAAxB;AAAoC,IAAA,OAAO,EAAED,GAAG,CAACiB,KAAJ,CAAUd,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,QAAQ,EAAEH,GAAG,CAACkB,MAA9B;AAAsC,IAAA,SAAS,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACI,IAAA,EAAE,EAAC,GADP;AAEI,IAAA,YAAY,EAAC,KAFjB;AAGI,IAAA,KAAK,EAAElB,GAAG,CAACI,KAAJ,CAAUE,OAHrB;AAII,IAAA,QAAQ,EAAEN,GAAG,CAACmB,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAOA;AAAK,IAAA,OAAO,EAAEJ,cAAd;AAA8B,IAAA,EAAE,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyC;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzC,CAPA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA,CAFJ,CADJ;AAeH,CA3BD;;AA6BA,eAAehB,QAAf","sourcesContent":["import React from 'react'\nimport EmojiConvertor from 'emoji-js'\nimport EmojiBox from './emoji'\n\n\nconst InputBar = ({app}) => {\n    const emojiClick = (code, emoji) => {\n        const {dispatch, message} = app.props\n        let emojiPic = new EmojiConvertor().replace_colons(`:${emoji.name}:`)\n        dispatch({type: 'typing', msg: message+emojiPic})\n        document.getElementById(\"m\").focus()\n    }\n\n    const toggleEmojiBox = () => {\n        app.setState({emoji: !app.state.emoji})\n    }\n\n    return (\n        <div>\n            <EmojiBox onEmojiClick={emojiClick} visible={app.state.emoji} />\n            <form action=\"\" onSubmit={app.sendIn} className=\"message\">\n            <input \n                id=\"m\" \n                autoComplete=\"off\" \n                value={app.props.message} \n                onChange={app.handleChange}\n            />\n            <div onClick={toggleEmojiBox} id=\"emoji\"><i className=\"far fa-grin fa-2x\"></i></div>\n            <button>Send</button>\n            </form>\n        </div>\n    )\n}\n\nexport default InputBar\n"]},"metadata":{},"sourceType":"module"}