{"ast":null,"code":"import _objectSpread from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { socket } from './index';\nimport { Stats } from 'fs';\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    persons: [],\n    messages: [],\n    message: '',\n    user: ''\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'chat message':\n      state = _objectSpread({}, state, {\n        message: ''\n      });\n      socket && socket.emit('chat message', action.msg);\n      break;\n\n    case 'username':\n      state = _objectSpread({}, state, {\n        user: action.name,\n        persons: state.persons.concat(action.name)\n      });\n      socket && socket.emit('connected', state.user);\n      break;\n\n    case 'typing':\n      state = _objectSpread({}, state, {\n        message: action.msg\n      });\n      break;\n\n    case 'socket message':\n      state = _objectSpread({}, state, {\n        messages: state.messages.concat(action.msg)\n      });\n      break;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/joona/git/chat-app/client/src/reducer.js"],"names":["socket","Stats","reducer","state","persons","messages","message","user","action","type","emit","msg","name","concat"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,SAArB;AACA,SAASC,KAAT,QAAsB,IAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAQX;AAAA,MAPDC,KAOC,uEAPO;AACJC,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,OAAO,EAAE,EAHL;AAIJC,IAAAA,IAAI,EAAE;AAJF,GAOP;AAAA,MADDC,MACC;;AACD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACIN,MAAAA,KAAK,qBAAOA,KAAP;AAAcG,QAAAA,OAAO,EAAE;AAAvB,QAAL;AACAN,MAAAA,MAAM,IAAIA,MAAM,CAACU,IAAP,CAAY,cAAZ,EAA4BF,MAAM,CAACG,GAAnC,CAAV;AACA;;AACJ,SAAK,UAAL;AACIR,MAAAA,KAAK,qBAAOA,KAAP;AAAcI,QAAAA,IAAI,EAAEC,MAAM,CAACI,IAA3B;AAAiCR,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcS,MAAd,CAAqBL,MAAM,CAACI,IAA5B;AAA1C,QAAL;AACAZ,MAAAA,MAAM,IAAIA,MAAM,CAACU,IAAP,CAAY,WAAZ,EAAyBP,KAAK,CAACI,IAA/B,CAAV;AACA;;AACJ,SAAK,QAAL;AACIJ,MAAAA,KAAK,qBAAOA,KAAP;AAAcG,QAAAA,OAAO,EAAEE,MAAM,CAACG;AAA9B,QAAL;AACA;;AACJ,SAAK,gBAAL;AACIR,MAAAA,KAAK,qBAAOA,KAAP;AAAcE,QAAAA,QAAQ,EAAEF,KAAK,CAACE,QAAN,CAAeQ,MAAf,CAAsBL,MAAM,CAACG,GAA7B;AAAxB,QAAL;AACA;AAdR;;AAgBA,SAAOR,KAAP;AACH,CA1BD;;AA4BA,eAAeD,OAAf","sourcesContent":["import {socket} from './index'\nimport { Stats } from 'fs';\n\nconst reducer = (\n    state = {\n        persons: [],\n        messages: [],\n        message: '',\n        user: ''\n    },\n    action\n) => {\n    switch (action.type) {\n        case 'chat message':\n            state = {...state, message: ''}\n            socket && socket.emit('chat message', action.msg)\n            break\n        case 'username':\n            state = {...state, user: action.name, persons: state.persons.concat(action.name)}\n            socket && socket.emit('connected', state.user)\n            break\n        case 'typing':\n            state = {...state, message: action.msg}\n            break\n        case 'socket message':\n            state = {...state, messages: state.messages.concat(action.msg)}\n            break\n    }\n    return state\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}