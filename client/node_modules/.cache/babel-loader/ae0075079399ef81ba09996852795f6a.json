{"ast":null,"code":"import _objectSpread from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { socket } from '../index';\n\nvar changeName = function changeName(state, name) {\n  var newPersons = state.persons;\n\n  if (newPersons.includes(state.user)) {\n    newPersons[newPersons.indexOf(state.user)] = name;\n  } else {\n    newPersons.push(name);\n  }\n\n  return newPersons;\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    persons: [],\n    messages: [],\n    message: '',\n    user: '',\n    logged: false,\n    username: '',\n    password: '',\n    loggedUser: null\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'chat message':\n      state = _objectSpread({}, state, {\n        message: ''\n      });\n      socket && socket.emit('chat message', action.msg);\n      break;\n\n    case 'username':\n      state = _objectSpread({}, state, {\n        user: action.name\n      });\n      socket && socket.emit('connected', state.user);\n      break;\n\n    case 'typing':\n      state = _objectSpread({}, state, {\n        message: action.msg\n      });\n      break;\n\n    case 'socket message':\n      state = _objectSpread({}, state, {\n        messages: state.messages.concat(action.msg)\n      });\n      break;\n\n    case 'users':\n      state = _objectSpread({}, state, {\n        persons: action.users\n      });\n      break;\n\n    case 'TYPING_USERNAME':\n      state = _objectSpread({}, state, {\n        username: action.username\n      });\n      break;\n\n    case 'TYPING_PASSWORD':\n      state = _objectSpread({}, state, {\n        password: action.password\n      });\n      break;\n\n    case 'LOGIN':\n      socket && socket.emit('log', action.user.username);\n      state = _objectSpread({}, state, {\n        persons: changeName(state, action.user.username),\n        user: action.user.username,\n        username: '',\n        password: '',\n        loggedUser: action.user,\n        logged: true\n      });\n      break;\n\n    case 'LOGOUT':\n      window.localStorage.removeItem('loggedUserJSON');\n      socket && socket.emit('log', action.name);\n      state = _objectSpread({}, state, {\n        persons: changeName(state, action.name),\n        user: action.name,\n        loggedUser: null,\n        logged: false\n      });\n      break;\n\n    case 'FAILED_LOGIN':\n      state = _objectSpread({}, state, {\n        username: '',\n        password: ''\n      });\n      break;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/joona/git/chat-app/client/src/components/reducer.js"],"names":["socket","changeName","state","name","newPersons","persons","includes","user","indexOf","push","reducer","messages","message","logged","username","password","loggedUser","action","type","emit","msg","concat","users","window","localStorage","removeItem"],"mappings":"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","sourcesContent":["import {socket} from '../index'\n\nconst changeName = (state, name) => {\n    const newPersons = state.persons\n    if (newPersons.includes(state.user)) {\n        newPersons[newPersons.indexOf(state.user)] = name\n    } else {\n        newPersons.push(name)\n    }\n    return newPersons\n}\n\nconst reducer = (\n    state = {\n        persons: [],\n        messages: [],\n        message: '',\n        user: '',\n        logged: false,\n        username: '',\n        password: '',\n        loggedUser: null\n    },\n    action\n) => {\n    switch (action.type) {\n        case 'chat message':\n            state = {...state, message: ''}\n            socket && socket.emit('chat message', action.msg)\n            break\n        case 'username':\n            state = {...state, user: action.name}\n            socket && socket.emit('connected', state.user)\n            break\n        case 'typing':\n            state = {...state, message: action.msg}\n            break\n        case 'socket message':\n            state = {...state, messages: state.messages.concat(action.msg)}\n            break\n        case 'users':\n            state = {...state, persons: action.users}\n            break\n        case 'TYPING_USERNAME':\n            state = {...state, username: action.username}\n            break\n        case 'TYPING_PASSWORD':\n            state = {...state, password: action.password}\n            break\n        case 'LOGIN':\n            socket && socket.emit('log', action.user.username)\n            state = {...state, persons: changeName(state, action.user.username), user: action.user.username, username: '', password: '', loggedUser: action.user, logged: true}\n            break\n        case 'LOGOUT':\n            window.localStorage.removeItem('loggedUserJSON')\n            socket && socket.emit('log', action.name)\n            state = {...state, persons: changeName(state, action.name), user: action.name, loggedUser: null, logged: false}\n            break\n        case 'FAILED_LOGIN':\n            state = {...state, username: '', password: ''}\n            break\n    }\n    return state\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}