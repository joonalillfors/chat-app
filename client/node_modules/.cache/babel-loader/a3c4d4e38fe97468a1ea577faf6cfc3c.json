{"ast":null,"code":"import _classCallCheck from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/joona/git/chat-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/joona/git/chat-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { getAName } from './usernames';\nimport { connect } from 'react-redux';\n\nvar Messages = function Messages(_ref) {\n  var messages = _ref.messages;\n  var i = 0;\n  return React.createElement(\"ul\", {\n    id: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, messages.map(function (msg) {\n    return React.createElement(\"li\", {\n      key: i++,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, msg);\n  }));\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.sendIn = function (event) {\n      event.preventDefault();\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          user = _this$props.user,\n          message = _this$props.message;\n      dispatch({\n        type: 'chat message',\n        msg: user + ': ' + message\n      }); //sendToServer(user+': '+message)\n    };\n\n    _this.handleChange = function (event) {\n      var dispatch = _this.props.dispatch;\n      dispatch({\n        type: 'typing',\n        msg: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n\n    /*\n    constructor(props) {\n      super(props)\n      this.state = {\n        persons: [],\n        messages: [],\n        message: '',\n        user: getAName()\n      }\n    }\n    */\n    value: function componentDidMount() {\n      var dispatch = this.props.dispatch;\n      var name = getAName();\n      dispatch({\n        type: 'username',\n        name: name\n      });\n    }\n    /*\n      send = (event) => {\n        event.preventDefault()\n        socket.emit('chat message', this.state.user + ': '+this.state.message)\n        this.setState({message: ''})\n        \n        socket.on('chat message', (msg) => {\n          this.setState(prev => ({\n            messages: [...prev.messages, msg]\n          }))\n        })\n        \n    }*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          message = _this$props2.message,\n          messages = _this$props2.messages;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Messages, {\n        messages: messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        action: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"m\",\n        autoComplete: \"off\",\n        value: message,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Send\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    persons: state.persons,\n    messages: state.messages,\n    message: state.message,\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/joona/git/chat-app/client/src/App.js"],"names":["React","Component","getAName","connect","Messages","messages","i","map","msg","App","sendIn","event","preventDefault","props","dispatch","user","message","type","handleChange","target","value","name","mapStateToProps","state","persons"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAC/B,MAAIC,CAAC,GAAG,CAAR;AACA,SACE;AAAI,IAAA,EAAE,EAAC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,GAAT,CAAa,UAAAC,GAAG;AAAA,WACf;AAAI,MAAA,GAAG,EAAEF,CAAC,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeE,GAAf,CADe;AAAA,GAAhB,CADH,CADF;AAOD,CATD;;IAWMC,G;;;;;;;;;;;;;;;;;;UAgCJC,M,GAAS,UAACC,KAAD,EAAW;AAClBA,MAAAA,KAAK,CAACC,cAAN;AADkB,wBAEgB,MAAKC,KAFrB;AAAA,UAEXC,QAFW,eAEXA,QAFW;AAAA,UAEDC,IAFC,eAEDA,IAFC;AAAA,UAEKC,OAFL,eAEKA,OAFL;AAGlBF,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAE,cAAP;AAAuBT,QAAAA,GAAG,EAAEO,IAAI,GAAC,IAAL,GAAUC;AAAtC,OAAD,CAAR,CAHkB,CAIlB;AACD,K;;UAEDE,Y,GAAe,UAACP,KAAD,EAAW;AAAA,UACjBG,QADiB,GACL,MAAKD,KADA,CACjBC,QADiB;AAExBA,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAE,QAAP;AAAiBT,QAAAA,GAAG,EAAEG,KAAK,CAACQ,MAAN,CAAaC;AAAnC,OAAD,CAAR;AACD,K;;;;;;;;AAzCD;;;;;;;;;;;wCAWoB;AAAA,UACXN,QADW,GACC,KAAKD,KADN,CACXC,QADW;AAElB,UAAMO,IAAI,GAAGnB,QAAQ,EAArB;AACAY,MAAAA,QAAQ,CAAC;AAACG,QAAAA,IAAI,EAAE,UAAP;AAAmBI,QAAAA,IAAI,EAAJA;AAAnB,OAAD,CAAR;AACD;AAEH;;;;;;;;;;;;;;;;6BA0BW;AAAA,yBACqB,KAAKR,KAD1B;AAAA,UACAG,OADA,gBACAA,OADA;AAAA,UACSX,QADT,gBACSA,QADT;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAM,QAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,EAAE,EAAC,GADL;AAEE,QAAA,YAAY,EAAC,KAFf;AAGE,QAAA,KAAK,EAAEW,OAHT;AAIE,QAAA,QAAQ,EAAE,KAAKE,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAFF,CADF;AAcD;;;;EA5DejB,S;;AA+DlB,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADiB;AAEhCnB,IAAAA,QAAQ,EAAEkB,KAAK,CAAClB,QAFgB;AAGhCW,IAAAA,OAAO,EAAEO,KAAK,CAACP,OAHiB;AAIhCD,IAAAA,IAAI,EAAEQ,KAAK,CAACR;AAJoB,GAAL;AAAA,CAA7B;;AAOA,eAAeZ,OAAO,CAACmB,eAAD,CAAP,CAAyBb,GAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport {getAName} from './usernames'\nimport {connect} from 'react-redux'\n\nconst Messages = ({messages}) => {\n  var i = 0\n  return (\n    <ul id='messages'>\n      {messages.map(msg => \n        <li key={i++}>{msg}</li>\n      )}\n    </ul>\n  )\n}\n\nclass App extends Component {\n  /*\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      messages: [],\n      message: '',\n      user: getAName()\n    }\n  }\n  */\n  componentDidMount() {\n    const {dispatch} = this.props\n    const name = getAName()\n    dispatch({type: 'username', name})\n  }\n\n/*\n  send = (event) => {\n    event.preventDefault()\n    socket.emit('chat message', this.state.user + ': '+this.state.message)\n    this.setState({message: ''})\n    \n    socket.on('chat message', (msg) => {\n      this.setState(prev => ({\n        messages: [...prev.messages, msg]\n      }))\n    })\n    \n}*/\n\n  sendIn = (event) => {\n    event.preventDefault()\n    const {dispatch, user, message} = this.props\n    dispatch({type: 'chat message', msg: user+': '+message})\n    //sendToServer(user+': '+message)\n  }\n\n  handleChange = (event) => {\n    const {dispatch} = this.props\n    dispatch({type: 'typing', msg: event.target.value})\n  }\n\n  render() {\n    const {message, messages} = this.props\n    return (\n      <div className=\"App\">\n        <Messages messages={messages} />\n        <form action=\"\" >\n          <input \n            id=\"m\" \n            autoComplete=\"off\" \n            value={message} \n            onChange={this.handleChange}\n          />\n          <button >Send</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  persons: state.persons,\n  messages: state.messages,\n  message: state.message,\n  user: state.user\n})\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}