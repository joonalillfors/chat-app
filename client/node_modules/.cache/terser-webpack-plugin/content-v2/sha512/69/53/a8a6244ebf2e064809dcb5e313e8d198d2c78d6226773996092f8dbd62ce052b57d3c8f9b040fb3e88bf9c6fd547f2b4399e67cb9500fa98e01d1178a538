{"map":"{\"version\":3,\"sources\":[\"/Users/joona/git/chat-app/client/src/components/usernames.js\",\"/Users/joona/git/chat-app/client/src/components/messages.js\",\"/Users/joona/git/chat-app/client/src/components/users.js\",\"/Users/joona/git/chat-app/client/src/components/login.js\",\"/Users/joona/git/chat-app/client/src/App.js\",\"/Users/joona/git/chat-app/client/src/serviceWorker.js\",\"/Users/joona/git/chat-app/client/src/components/socket.js\",\"/Users/joona/git/chat-app/client/src/components/reducer.js\",\"/Users/joona/git/chat-app/client/src/index.js\"],\"names\":[\"nameGetter\",\"Chance\",\"Messages\",\"_ref\",\"messages\",\"i\",\"react_default\",\"a\",\"createElement\",\"id\",\"map\",\"msg\",\"key\",\"Users\",\"users\",\"user\",\"components_login\",\"login\",\"Object\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"ctx\",\"res\",\"wrap\",\"_context\",\"prev\",\"next\",\"axios\",\"post\",\"sent\",\"abrupt\",\"data\",\"stop\",\"this\",\"_x\",\"apply\",\"arguments\",\"App\",\"sendIn\",\"event\",\"preventDefault\",\"_this$props\",\"_this\",\"props\",\"dispatch\",\"type\",\"message\",\"handleChange\",\"target\",\"value\",\"_this$props2\",\"username\",\"password\",\"_dispatch\",\"loginService\",\"t0\",\"console\",\"log\",\"name\",\"first\",\"_this$props3\",\"persons\",\"logged\",\"className\",\"href\",\"window\",\"location\",\"components_messages\",\"components_users\",\"action\",\"onSubmit\",\"autoComplete\",\"onChange\",\"Component\",\"connect\",\"state\",\"loggedUser\",\"Boolean\",\"hostname\",\"match\",\"socket\",\"io\",\"confSocket\",\"on\",\"reducer\",\"length\",\"undefined\",\"objectSpread\",\"emit\",\"concat\",\"__webpack_require__\",\"d\",\"__webpack_exports__\",\"src_socket\",\"store\",\"createStore\",\"ReactDOM\",\"render\",\"es\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import Chance from 'chance'\\n\\nconst nameGetter = new Chance()\\n\\nexport const getAName = () => nameGetter.first()\",\"import React from 'react'\\n\\nconst Messages = ({messages}) => {\\n  var i = 0\\n  return (\\n    <ul id='messages'>\\n      {messages.map(msg => \\n        <li key={i++}>{msg}</li>\\n      )}\\n    </ul>\\n  )\\n}\\n\\nexport default Messages\",\"import React from 'react'\\n\\nconst Users = ({users}) => {\\n    var i = 0\\n    return (\\n        <ul id=\\\"users\\\">\\n            <li>Online users:</li>\\n            {users.map(user => \\n                <li key={i++}>{user}</li>\\n            )}\\n        </ul>\\n    )\\n}\\n\\nexport default Users\",\"import axios from 'axios'\\nconst baseUrl = '/api/login'\\n\\nconst login = async (ctx) => {\\n    const res = await axios.post(baseUrl, ctx)\\n    return res.data\\n}\\n\\nexport default { login }\",\"import React, { Component } from 'react'\\nimport './App.css'\\nimport {getAName} from './components/usernames'\\nimport {connect} from 'react-redux'\\nimport Messages from './components/messages'\\nimport Users from './components/users'\\nimport loginService from './components/login'\\n\\nclass App extends Component {\\n  componentDidMount() {\\n    const {dispatch} = this.props\\n    const name = getAName()\\n    dispatch({type: 'username', name})\\n  }\\n\\n  sendIn = (event) => {\\n    event.preventDefault()\\n    const {dispatch, user, message} = this.props\\n    dispatch({type: 'chat message', msg: user+': '+message})\\n  }\\n\\n  handleChange = (event) => {\\n    const {dispatch} = this.props\\n    dispatch({type: 'typing', msg: event.target.value})\\n  }\\n\\n  login = async (event) => {\\n    event.preventDefault()\\n    try {\\n      const {dispatch, username, password} = this.props\\n      const user = await loginService.login({\\n        username: username,\\n        password: password\\n      })\\n\\n      dispatch({type: 'LOGIN', user})\\n    } catch (e) {\\n      const {dispatch} = this.props\\n      console.log('login failed')\\n      dispatch({type: 'LOGIN', user: null})\\n    }\\n  }\\n\\n  render() {\\n    const {message, messages, persons, logged, username, password} = this.props\\n    const toAuth = {logged, username, password}\\n    return (\\n      <div className=\\\"App\\\">\\n        if (logged) {\\n          <div id=\\\"bar\\\">\\n          <form>\\n            Username:\\n            <input type=\\\"text\\\" value={username}></input>\\n            Password:\\n            <input type=\\\"text\\\" value={password}></input>\\n          </form>\\n\\n          <a href={window.location}>Sign Up</a>\\n        </div>\\n        }\\n        <Messages messages={messages}/>\\n        <Users users={persons}/>\\n        <form action=\\\"\\\" onSubmit={this.sendIn}>\\n          <input \\n            id=\\\"m\\\" \\n            autoComplete=\\\"off\\\" \\n            value={message} \\n            onChange={this.handleChange}\\n          />\\n          <button >Send</button>\\n        </form>\\n      </div>\\n    );\\n  }\\n}\\n\\nconst mapStateToProps = state => ({\\n  persons: state.persons,\\n  messages: state.messages,\\n  message: state.message,\\n  user: state.user,\\n  logged: state.logged,\\n  username: state.username,\\n  password: state.password,\\n  loggedUser: state.user\\n})\\n\\nexport default connect(mapStateToProps)(App);\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import io from 'socket.io-client'\\n\\nconst socket = io('http://localhost:3001')\\n\\nconst confSocket = dispatch => {\\n    socket.on('chat message', msg => {\\n        dispatch({type: 'socket message', msg})\\n    })\\n\\n    socket.on('users', users => {\\n        dispatch({type: 'users', users})\\n    })\\n\\n    return socket\\n}\\n\\nexport default confSocket\",\"import {socket} from '../index'\\n\\nconst reducer = (\\n    state = {\\n        persons: [],\\n        messages: [],\\n        message: '',\\n        user: '',\\n        logged: false,\\n        username: '',\\n        password: '',\\n        loggedUser: null\\n    },\\n    action\\n) => {\\n    switch (action.type) {\\n        case 'chat message':\\n            state = {...state, message: ''}\\n            socket && socket.emit('chat message', action.msg)\\n            break\\n        case 'username':\\n            state = {...state, user: action.name}\\n            socket && socket.emit('connected', state.user)\\n            break\\n        case 'typing':\\n            state = {...state, message: action.msg}\\n            break\\n        case 'socket message':\\n            state = {...state, messages: state.messages.concat(action.msg)}\\n            break\\n        case 'users':\\n            state = {...state, persons: action.users}\\n            break\\n        case 'TYPING_USERNAME':\\n            state = {...state, username: action.username}\\n            break\\n        case 'TYPING_PASSWORD':\\n            state = {...state, password: action.password}\\n            break\\n        case 'LOGIN':\\n            state = {...state, username: '', password: '', loggedUser: action.user}\\n            break\\n    }\\n    return state\\n}\\n\\nexport default reducer\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\nimport confSocket from './components/socket'\\nimport {createStore} from 'redux'\\nimport reducer from './components/reducer'\\nimport {Provider} from 'react-redux'\\nconst store = createStore(reducer)\\n\\nexport const socket = confSocket(store.dispatch)\\n\\nReactDOM.render(\\n    <Provider store={store}>\\n        <App />\\n    </Provider>, \\n    document.getElementById('root')\\n);\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{109:function(e,t){},112:function(e,t,a){\"use strict\";a.r(t);var n=a(0),s=a.n(n),r=a(42),o=a.n(r),c=a(7),u=a.n(c),i=a(13),l=a(43),p=a(44),m=a(51),g=a(45),d=a(52),h=(a(60),a(46)),f=new(a.n(h).a),v=a(15),b=function(e){var t=e.messages,a=0;return s.a.createElement(\"ul\",{id:\"messages\"},t.map(function(e){return s.a.createElement(\"li\",{key:a++},e)}))},w=function(e){var t=e.users,a=0;return s.a.createElement(\"ul\",{id:\"users\"},s.a.createElement(\"li\",null,\"Online users:\"),t.map(function(e){return s.a.createElement(\"li\",{key:a++},e)}))},y=a(49),O=a.n(y),k={login:function(){var e=Object(i.a)(u.a.mark(function e(t){var a;return u.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,O.a.post(\"/api/login\",t);case 2:return a=e.sent,e.abrupt(\"return\",a.data);case 4:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},E=function(e){function t(){var e,a;Object(l.a)(this,t);for(var n=arguments.length,s=new Array(n),r=0;r<n;r++)s[r]=arguments[r];return(a=Object(m.a)(this,(e=Object(g.a)(t)).call.apply(e,[this].concat(s)))).sendIn=function(e){e.preventDefault();var t=a.props;(0,t.dispatch)({type:\"chat message\",msg:t.user+\": \"+t.message})},a.handleChange=function(e){(0,a.props.dispatch)({type:\"typing\",msg:e.target.value})},a.login=function(){var e=Object(i.a)(u.a.mark(function e(t){var n,s,r,o,c,i;return u.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),e.prev=1,n=a.props,s=n.dispatch,r=n.username,o=n.password,e.next=5,k.login({username:r,password:o});case 5:c=e.sent,s({type:\"LOGIN\",user:c}),e.next=14;break;case 9:e.prev=9,e.t0=e.catch(1),i=a.props.dispatch,console.log(\"login failed\"),i({type:\"LOGIN\",user:null});case 14:case\"end\":return e.stop()}},e,this,[[1,9]])}));return function(t){return e.apply(this,arguments)}}(),a}return Object(d.a)(t,e),Object(p.a)(t,[{key:\"componentDidMount\",value:function(){(0,this.props.dispatch)({type:\"username\",name:f.first()})}},{key:\"render\",value:function(){var e=this.props,t=e.message,a=e.messages,n=e.persons,r=(e.logged,e.username),o=e.password;return s.a.createElement(\"div\",{className:\"App\"},\"if (logged) \",s.a.createElement(\"div\",{id:\"bar\"},s.a.createElement(\"form\",null,\"Username:\",s.a.createElement(\"input\",{type:\"text\",value:r}),\"Password:\",s.a.createElement(\"input\",{type:\"text\",value:o})),s.a.createElement(\"a\",{href:window.location},\"Sign Up\")),s.a.createElement(b,{messages:a}),s.a.createElement(w,{users:n}),s.a.createElement(\"form\",{action:\"\",onSubmit:this.sendIn},s.a.createElement(\"input\",{id:\"m\",autoComplete:\"off\",value:t,onChange:this.handleChange}),s.a.createElement(\"button\",null,\"Send\")))}}]),t}(n.Component),j=Object(v.b)(function(e){return{persons:e.persons,messages:e.messages,message:e.message,user:e.user,logged:e.logged,username:e.username,password:e.password,loggedUser:e.user}})(E);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var x=a(50),I=a.n(x)()(\"http://localhost:3001\"),N=function(e){return I.on(\"chat message\",function(t){e({type:\"socket message\",msg:t})}),I.on(\"users\",function(t){e({type:\"users\",users:t})}),I},S=a(14),U=a(4),C=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{persons:[],messages:[],message:\"\",user:\"\",logged:!1,username:\"\",password:\"\",loggedUser:null},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"chat message\":e=Object(U.a)({},e,{message:\"\"}),A&&A.emit(\"chat message\",t.msg);break;case\"username\":e=Object(U.a)({},e,{user:t.name}),A&&A.emit(\"connected\",e.user);break;case\"typing\":e=Object(U.a)({},e,{message:t.msg});break;case\"socket message\":e=Object(U.a)({},e,{messages:e.messages.concat(t.msg)});break;case\"users\":e=Object(U.a)({},e,{persons:t.users});break;case\"TYPING_USERNAME\":e=Object(U.a)({},e,{username:t.username});break;case\"TYPING_PASSWORD\":e=Object(U.a)({},e,{password:t.password});break;case\"LOGIN\":e=Object(U.a)({},e,{username:\"\",password:\"\",loggedUser:t.user})}return e};a.d(t,\"socket\",function(){return A});var G=Object(S.b)(C),A=N(G.dispatch);o.a.render(s.a.createElement(v.a,{store:G},s.a.createElement(j,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},53:function(e,t,a){e.exports=a(112)},60:function(e,t,a){}},[[53,2,1]]]);","extractedComments":[]}