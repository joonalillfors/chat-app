{"map":"{\"version\":3,\"sources\":[\"/Users/joona/git/chat-app/client/src/components/usernames.js\",\"/Users/joona/git/chat-app/client/src/components/messages.js\",\"/Users/joona/git/chat-app/client/src/components/users.js\",\"/Users/joona/git/chat-app/client/src/components/login.js\",\"/Users/joona/git/chat-app/client/src/App.js\",\"/Users/joona/git/chat-app/client/src/serviceWorker.js\",\"/Users/joona/git/chat-app/client/src/components/socket.js\",\"/Users/joona/git/chat-app/client/src/index.js\"],\"names\":[\"nameGetter\",\"Chance\",\"getAName\",\"first\",\"Messages\",\"_ref\",\"messages\",\"i\",\"react_default\",\"a\",\"createElement\",\"id\",\"map\",\"msg\",\"key\",\"Users\",\"users\",\"user\",\"loginService\",\"Object\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"ctx\",\"res\",\"wrap\",\"_context\",\"prev\",\"next\",\"axios\",\"post\",\"sent\",\"abrupt\",\"data\",\"stop\",\"this\",\"_x\",\"apply\",\"arguments\",\"App\",\"sendIn\",\"event\",\"preventDefault\",\"_this$props\",\"_this\",\"props\",\"dispatch\",\"type\",\"message\",\"handleChange\",\"target\",\"value\",\"handleNameChange\",\"username\",\"handlePwChange\",\"password\",\"login\",\"_this$props2\",\"window\",\"localStorage\",\"setItem\",\"JSON\",\"stringify\",\"t0\",\"console\",\"log\",\"logout\",\"name\",\"AuthBar\",\"_this$props3\",\"logged\",\"href\",\"onClick\",\"onSubmit\",\"onChange\",\"loggedUserJSON\",\"getItem\",\"parse\",\"_this$props4\",\"persons\",\"className\",\"components_messages\",\"components_users\",\"action\",\"autoComplete\",\"Component\",\"connect\",\"state\",\"loggedUser\",\"Boolean\",\"location\",\"hostname\",\"match\",\"socket\",\"io\",\"confSocket\",\"on\",\"__webpack_require__\",\"d\",\"__webpack_exports__\",\"src_socket\",\"store\",\"createStore\",\"reducer\",\"ReactDOM\",\"render\",\"es\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"0OAEMA,EAAa,WAAIC,GAEVC,EAAW,WAAA,OAAMF,EAAWG,iBCS1BC,EAXE,SAAAC,GAAgB,IAAdC,EAAcD,EAAdC,SACbC,EAAI,EACR,OACEC,EAAAC,EAAAC,cAAA,KAAA,CAAIC,GAAG,YACJL,EAASM,IAAI,SAAAC,GAAG,OACfL,EAAAC,EAAAC,cAAA,KAAA,CAAII,IAAKP,KAAMM,OCORE,EAZD,SAAAV,GAAa,IAAXW,EAAWX,EAAXW,MACRT,EAAI,EACR,OACIC,EAAAC,EAAAC,cAAA,KAAA,CAAIC,GAAG,SACHH,EAAAC,EAAAC,cAAA,KAAA,KAAA,iBACCM,EAAMJ,IAAI,SAAAK,GAAI,OACXT,EAAAC,EAAAC,cAAA,KAAA,CAAII,IAAKP,KAAMU,wBCAhBC,EALG,WAAA,IAAAb,EAAAc,OAAAC,EAAA,EAAAD,CAAAE,EAAAZ,EAAAa,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAJ,EAAAZ,EAAAiB,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EACCC,EAAAA,EAAMC,KAHZ,aAG0BP,GADrB,KAAA,EAAA,OACXC,EADWE,EAAAK,KAAAL,EAAAM,OAAA,SAEVR,EAAIS,MAFM,KAAA,EAAA,IAAA,MAAA,OAAAP,EAAAQ,SAAAZ,EAAAa,SAAH,OAAA,SAAAC,GAAA,OAAAhC,EAAAiC,MAAAF,KAAAG,YAAA,GCKZC,6MAaJC,OAAS,SAACC,GACRA,EAAMC,iBADY,IAAAC,EAEgBC,EAAKC,OACvCC,EAHkBH,EAEXG,UACE,CAACC,KAAM,eAAgBnC,IAHd+B,EAED3B,KACyB,KAHxB2B,EAEKK,aAIzBC,aAAe,SAACR,IAEdK,EADmBF,EAAKC,MAAjBC,UACE,CAACC,KAAM,SAAUnC,IAAK6B,EAAMS,OAAOC,WAG9CC,iBAAmB,SAACX,IAElBK,EADmBF,EAAKC,MAAjBC,UACE,CAACC,KAAM,kBAAmBM,SAAUZ,EAAMS,OAAOC,WAG5DG,eAAiB,SAACb,IAEhBK,EADmBF,EAAKC,MAAjBC,UACE,CAACC,KAAM,kBAAmBQ,SAAUd,EAAMS,OAAOC,WAG5DK,4CAAQ,SAAAlC,EAAOmB,GAAP,IAAAgB,EAAAX,EAAAO,EAAAE,EAAAvC,EAAA,OAAAI,EAAAZ,EAAAiB,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OACNa,EAAMC,iBADAhB,EAAAC,KAAA,EAAA8B,EAGmCb,EAAKC,MAArCC,EAHHW,EAGGX,SAAUO,EAHbI,EAGaJ,SAAUE,EAHvBE,EAGuBF,SAHvB7B,EAAAE,KAAA,EAIeX,EAAa,CAC9BoC,SAAAA,EACAE,SAAAA,IANE,KAAA,EAIEvC,EAJFU,EAAAK,KASJe,EAAS,CAACC,KAAM,QAAS/B,KAAAA,IACzB0C,OAAOC,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAU9C,IAVzDU,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAqC,GAAArC,EAAA,MAAA,GAYJsC,QAAQC,IAAI,gBAZR,KAAA,GAAA,IAAA,MAAA,OAAAvC,EAAAQ,SAAAZ,EAAAa,KAAA,CAAA,CAAA,EAAA,iEAgBR+B,OAAS,SAACzB,IAGRK,EAFmBF,EAAKC,MAAjBC,UAEE,CAACC,KAAM,SAAUoB,KADblE,SAIfmE,QAAU,WAAM,IAAAC,EACuBzB,EAAKC,MAAnCyB,EADOD,EACPC,OAAQjB,EADDgB,EACChB,SAAUE,EADXc,EACWd,SACzB,OAAIe,EAEA/D,EAAAC,EAAAC,cAAA,IAAA,CAAG8D,KAAK,cAAc7D,GAAG,SAAS8D,QAAS5B,EAAKsB,QAAQ3D,EAAAC,EAAAC,cAAA,SAAA,KAAA,YAK1DF,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,OAAA,CAAMgE,SAAU7B,EAAKY,OAArB,YAEEjD,EAAAC,EAAAC,cAAA,QAAA,CAAOsC,KAAK,OAAOI,MAAOE,EAAUqB,SAAU9B,EAAKQ,mBAFrD,YAIE7C,EAAAC,EAAAC,cAAA,QAAA,CAAOsC,KAAK,WAAWI,MAAOI,EAAUmB,SAAU9B,EAAKU,iBACvD/C,EAAAC,EAAAC,cAAA,SAAA,KAAA,WAGFF,EAAAC,EAAAC,cAAA,IAAA,CAAG8D,KAAK,eAAchE,EAAAC,EAAAC,cAAA,SAAA,KAAA,iGAxE1B,IAAMkE,EAAiBjB,OAAOC,aAAaiB,QAAQ,kBAC5C9B,EAAYX,KAAKU,MAAjBC,SACH6B,EAEF7B,EAAS,CAACC,KAAM,QAAS/B,KADZ6C,KAAKgB,MAAMF,KAIxB7B,EAAS,CAACC,KAAM,WAAYoB,KADflE,uCAuER,IAAA6E,EAC0D3C,KAAKU,MAA/DG,EADA8B,EACA9B,QAAS3C,EADTyE,EACSzE,SAAU0E,EADnBD,EACmBC,QADnBD,EAC4BR,OAD5BQ,EACoCzB,SADpCyB,EAC8CvB,SAErD,OACEhD,EAAAC,EAAAC,cAAA,MAAA,CAAKuE,UAAU,OACbzE,EAAAC,EAAAC,cAAA0B,KAAMiC,QAAN,MACA7D,EAAAC,EAAAC,cAACwE,EAAD,CAAU5E,SAAUA,IACpBE,EAAAC,EAAAC,cAACyE,EAAD,CAAOnE,MAAOgE,IACdxE,EAAAC,EAAAC,cAAA,OAAA,CAAM0E,OAAO,GAAGV,SAAUtC,KAAKK,OAAQwC,UAAU,WAC/CzE,EAAAC,EAAAC,cAAA,QAAA,CACEC,GAAG,IACH0E,aAAa,MACbjC,MAAOH,EACP0B,SAAUvC,KAAKc,eAEjB1C,EAAAC,EAAAC,cAAA,SAAA,KAAA,iBA9FQ4E,EAAAA,WAgHHC,EAAAA,OAAAA,EAAAA,EAAAA,CAXS,SAAAC,GAAK,MAAK,CAChCR,QAASQ,EAAMR,QACf1E,SAAUkF,EAAMlF,SAChB2C,QAASuC,EAAMvC,QACfhC,KAAMuE,EAAMvE,KACZsD,OAAQiB,EAAMjB,OACdjB,SAAUkC,EAAMlC,SAChBE,SAAUgC,EAAMhC,SAChBiC,WAAYD,EAAMvE,OAGLsE,CAAyB/C,GC5GpBkD,QACW,cAA7B/B,OAAOgC,SAASC,UAEe,UAA7BjC,OAAOgC,SAASC,UAEhBjC,OAAOgC,SAASC,SAASC,MACvB,uEChBAC,QAASC,EAAAA,CAAG,yBAcHC,EAZI,SAAAjD,GASf,OARA+C,EAAOG,GAAG,eAAgB,SAAApF,GACtBkC,EAAS,CAACC,KAAM,iBAAkBnC,IAAAA,MAGtCiF,EAAOG,GAAG,QAAS,SAAAjF,GACf+B,EAAS,CAACC,KAAM,QAAShC,MAAAA,MAGtB8E,4BCbXI,EAAAC,EAAAC,EAAA,SAAA,WAAA,OAAAC,IAQA,IAAMC,EAAQC,OAAAA,EAAAA,EAAAA,CAAYC,EAAAA,GAEbV,EAASE,EAAWM,EAAMvD,UAEvC0D,EAAAA,EAASC,OACLlG,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAUL,MAAOA,GACb9F,EAAAC,EAAAC,cAACkG,EAAD,OAEJC,SAASC,eAAe,SFiHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import Chance from 'chance'\\n\\nconst nameGetter = new Chance()\\n\\nexport const getAName = () => nameGetter.first()\",\"import React from 'react'\\n\\nconst Messages = ({messages}) => {\\n  var i = 0\\n  return (\\n    <ul id='messages'>\\n      {messages.map(msg => \\n        <li key={i++}>{msg}</li>\\n      )}\\n    </ul>\\n  )\\n}\\n\\nexport default Messages\",\"import React from 'react'\\n\\nconst Users = ({users}) => {\\n    var i = 0\\n    return (\\n        <ul id=\\\"users\\\">\\n            <li>Online users:</li>\\n            {users.map(user => \\n                <li key={i++}>{user}</li>\\n            )}\\n        </ul>\\n    )\\n}\\n\\nexport default Users\",\"import axios from 'axios'\\nconst baseUrl = '/api/login'\\n\\nconst loginService = async (ctx) => {\\n    const res = await axios.post(baseUrl, ctx)\\n    return res.data\\n}\\n\\nexport default loginService\",\"import React, { Component } from 'react'\\nimport './App.css'\\nimport {getAName} from './components/usernames'\\nimport {connect} from 'react-redux'\\nimport Messages from './components/messages'\\nimport Users from './components/users'\\nimport loginService from './components/login'\\n\\nclass App extends Component {\\n  componentDidMount() {\\n    const loggedUserJSON = window.localStorage.getItem('loggedUserJSON')\\n    const {dispatch} = this.props\\n    if (loggedUserJSON) {\\n      const user = JSON.parse(loggedUserJSON)\\n      dispatch({type: 'LOGIN', user})\\n    } else {\\n      const name = getAName()\\n      dispatch({type: 'username', name})\\n    }\\n  }\\n\\n  sendIn = (event) => {\\n    event.preventDefault()\\n    const {dispatch, user, message} = this.props\\n    dispatch({type: 'chat message', msg: user+': '+message})\\n  }\\n\\n  handleChange = (event) => {\\n    const {dispatch} = this.props\\n    dispatch({type: 'typing', msg: event.target.value})\\n  }\\n\\n  handleNameChange = (event) => {\\n    const {dispatch} = this.props\\n    dispatch({type: 'TYPING_USERNAME', username: event.target.value})\\n  }\\n\\n  handlePwChange = (event) => {\\n    const {dispatch} = this.props\\n    dispatch({type: 'TYPING_PASSWORD', password: event.target.value})\\n  }\\n\\n  login = async (event) => {\\n    event.preventDefault()\\n    try {\\n      const {dispatch, username, password} = this.props\\n      const user = await loginService({\\n        username,\\n        password\\n      })\\n      \\n      dispatch({type: 'LOGIN', user})\\n      window.localStorage.setItem('loggedUserJSON', JSON.stringify(user))\\n    } catch (e) {\\n      console.log('login failed')\\n    }\\n  }\\n\\n  logout = (event) => {\\n    const {dispatch} = this.props\\n    const name = getAName()\\n    dispatch({type: 'LOGOUT', name})\\n  }\\n\\n  AuthBar = () => {\\n    const {logged, username, password} = this.props\\n    if (logged) {\\n      return (\\n        <a href=\\\"/api/logout\\\" id=\\\"logout\\\" onClick={this.logout}><button>Log out</button></a>\\n      )\\n    }\\n\\n    return (\\n      <div>\\n        <form onSubmit={this.login}>\\n          Username:\\n          <input type=\\\"text\\\" value={username} onChange={this.handleNameChange}></input>\\n          Password:\\n          <input type=\\\"password\\\" value={password} onChange={this.handlePwChange}></input>\\n          <button>Log in</button>\\n        </form>\\n\\n        <a href=\\\"/api/signup\\\"><button>Sign Up</button></a>\\n      </div>\\n    )\\n  }\\n\\n  render() {\\n    const {message, messages, persons, logged, username, password} = this.props\\n    const toAuth = {logged, username, password}\\n    return (\\n      <div className=\\\"App\\\">\\n        <this.AuthBar />\\n        <Messages messages={messages}/>\\n        <Users users={persons}/>\\n        <form action=\\\"\\\" onSubmit={this.sendIn} className=\\\"message\\\">\\n          <input \\n            id=\\\"m\\\" \\n            autoComplete=\\\"off\\\" \\n            value={message} \\n            onChange={this.handleChange}\\n          />\\n          <button >Send</button>\\n        </form>\\n      </div>\\n    );\\n  }\\n}\\n\\nconst mapStateToProps = state => ({\\n  persons: state.persons,\\n  messages: state.messages,\\n  message: state.message,\\n  user: state.user,\\n  logged: state.logged,\\n  username: state.username,\\n  password: state.password,\\n  loggedUser: state.user\\n})\\n\\nexport default connect(mapStateToProps)(App);\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import io from 'socket.io-client'\\n\\nconst socket = io('http://localhost:3001')\\n\\nconst confSocket = dispatch => {\\n    socket.on('chat message', msg => {\\n        dispatch({type: 'socket message', msg})\\n    })\\n\\n    socket.on('users', users => {\\n        dispatch({type: 'users', users})\\n    })\\n\\n    return socket\\n}\\n\\nexport default confSocket\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\nimport confSocket from './components/socket'\\nimport {createStore} from 'redux'\\nimport reducer from './components/reducer'\\nimport {Provider} from 'react-redux'\\nconst store = createStore(reducer)\\n\\nexport const socket = confSocket(store.dispatch)\\n\\nReactDOM.render(\\n    <Provider store={store}>\\n        <App />\\n    </Provider>, \\n    document.getElementById('root')\\n);\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{109:function(e,t){},112:function(e,t,n){\"use strict\";n.r(t);var a=n(0),s=n.n(a),o=n(41),r=n.n(o),l=n(6),i=n.n(l),c=n(12),m=n(42),u=n(43),p=n(51),d=n(44),g=n(52),h=(n(60),n(45)),b=new(n.n(h).a),v=function(){return b.first()},f=n(14),j=function(e){var t=e.messages,n=0;return s.a.createElement(\"ul\",{id:\"messages\"},t.map(function(e){return s.a.createElement(\"li\",{key:n++},e)}))},w=function(e){var t=e.users,n=0;return s.a.createElement(\"ul\",{id:\"users\"},s.a.createElement(\"li\",null,\"Online users:\"),t.map(function(e){return s.a.createElement(\"li\",{key:n++},e)}))},E=n(48),x=n.n(E),U=function(){var e=Object(c.a)(i.a.mark(function e(t){var n;return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,x.a.post(\"/api/login\",t);case 2:return n=e.sent,e.abrupt(\"return\",n.data);case 4:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),y=function(e){function t(){var e,n;Object(m.a)(this,t);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(n=Object(p.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(o)))).sendIn=function(e){e.preventDefault();var t=n.props;(0,t.dispatch)({type:\"chat message\",msg:t.user+\": \"+t.message})},n.handleChange=function(e){(0,n.props.dispatch)({type:\"typing\",msg:e.target.value})},n.handleNameChange=function(e){(0,n.props.dispatch)({type:\"TYPING_USERNAME\",username:e.target.value})},n.handlePwChange=function(e){(0,n.props.dispatch)({type:\"TYPING_PASSWORD\",password:e.target.value})},n.login=function(){var e=Object(c.a)(i.a.mark(function e(t){var a,s,o,r,l;return i.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),e.prev=1,a=n.props,s=a.dispatch,o=a.username,r=a.password,e.next=5,U({username:o,password:r});case 5:l=e.sent,s({type:\"LOGIN\",user:l}),window.localStorage.setItem(\"loggedUserJSON\",JSON.stringify(l)),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(1),console.log(\"login failed\");case 13:case\"end\":return e.stop()}},e,this,[[1,10]])}));return function(t){return e.apply(this,arguments)}}(),n.logout=function(e){(0,n.props.dispatch)({type:\"LOGOUT\",name:v()})},n.AuthBar=function(){var e=n.props,t=e.logged,a=e.username,o=e.password;return t?s.a.createElement(\"a\",{href:\"/api/logout\",id:\"logout\",onClick:n.logout},s.a.createElement(\"button\",null,\"Log out\")):s.a.createElement(\"div\",null,s.a.createElement(\"form\",{onSubmit:n.login},\"Username:\",s.a.createElement(\"input\",{type:\"text\",value:a,onChange:n.handleNameChange}),\"Password:\",s.a.createElement(\"input\",{type:\"password\",value:o,onChange:n.handlePwChange}),s.a.createElement(\"button\",null,\"Log in\")),s.a.createElement(\"a\",{href:\"/api/signup\"},s.a.createElement(\"button\",null,\"Sign Up\")))},n}return Object(g.a)(t,e),Object(u.a)(t,[{key:\"componentDidMount\",value:function(){var e=window.localStorage.getItem(\"loggedUserJSON\"),t=this.props.dispatch;e?t({type:\"LOGIN\",user:JSON.parse(e)}):t({type:\"username\",name:v()})}},{key:\"render\",value:function(){var e=this.props,t=e.message,n=e.messages,a=e.persons;e.logged,e.username,e.password;return s.a.createElement(\"div\",{className:\"App\"},s.a.createElement(this.AuthBar,null),s.a.createElement(j,{messages:n}),s.a.createElement(w,{users:a}),s.a.createElement(\"form\",{action:\"\",onSubmit:this.sendIn,className:\"message\"},s.a.createElement(\"input\",{id:\"m\",autoComplete:\"off\",value:t,onChange:this.handleChange}),s.a.createElement(\"button\",null,\"Send\")))}}]),t}(a.Component),O=Object(f.b)(function(e){return{persons:e.persons,messages:e.messages,message:e.message,user:e.user,logged:e.logged,username:e.username,password:e.password,loggedUser:e.user}})(y);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var S=n(49),_=n.n(S)()(\"http://localhost:3001\"),C=function(e){return _.on(\"chat message\",function(t){e({type:\"socket message\",msg:t})}),_.on(\"users\",function(t){e({type:\"users\",users:t})}),_},N=n(13),k=n(50),P=n.n(k);n.d(t,\"socket\",function(){return T});var I=Object(N.b)(P.a),T=C(I.dispatch);r.a.render(s.a.createElement(f.a,{store:I},s.a.createElement(O,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},50:function(e,t){throw new Error(\"Module build failed (from ./node_modules/babel-loader/lib/index.js):\\nTypeError: /Users/joona/git/chat-app/client/src/components/reducer.js: Duplicate declaration \\\"newPersons\\\"\\n\\x1b[0m \\x1b[90m 54 | \\x1b[39m        \\x1b[36mcase\\x1b[39m \\x1b[32m'LOGOUT'\\x1b[39m\\x1b[33m:\\x1b[39m\\x1b[0m\\n\\x1b[0m \\x1b[90m 55 | \\x1b[39m            window\\x1b[33m.\\x1b[39mlocalStorage\\x1b[33m.\\x1b[39mremoveItem(\\x1b[32m'loggedUserJSON'\\x1b[39m)\\x1b[0m\\n\\x1b[0m\\x1b[31m\\x1b[1m>\\x1b[22m\\x1b[39m\\x1b[90m 56 | \\x1b[39m            \\x1b[36mconst\\x1b[39m newPersons \\x1b[33m=\\x1b[39m changeName(state\\x1b[33m,\\x1b[39m action\\x1b[33m.\\x1b[39mname)\\x1b[0m\\n\\x1b[0m \\x1b[90m    | \\x1b[39m                  \\x1b[31m\\x1b[1m^\\x1b[22m\\x1b[39m\\x1b[0m\\n\\x1b[0m \\x1b[90m 57 | \\x1b[39m            state \\x1b[33m=\\x1b[39m {\\x1b[33m...\\x1b[39mstate\\x1b[33m,\\x1b[39m persons\\x1b[33m:\\x1b[39m newPersons\\x1b[33m,\\x1b[39m user\\x1b[33m:\\x1b[39m action\\x1b[33m.\\x1b[39mname\\x1b[33m,\\x1b[39m loggedUser\\x1b[33m:\\x1b[39m \\x1b[36mnull\\x1b[39m\\x1b[33m,\\x1b[39m logged\\x1b[33m:\\x1b[39m \\x1b[36mfalse\\x1b[39m}\\x1b[0m\\n\\x1b[0m \\x1b[90m 58 | \\x1b[39m            \\x1b[36mbreak\\x1b[39m\\x1b[0m\\n\\x1b[0m \\x1b[90m 59 | \\x1b[39m    }\\x1b[0m\\n    at File.buildCodeFrameError (/Users/joona/git/chat-app/client/node_modules/@babel/core/lib/transformation/file/file.js:261:12)\\n    at Scope.checkBlockScopedCollisions (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/scope/index.js:347:22)\\n    at Scope.registerBinding (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/scope/index.js:504:16)\\n    at Scope.registerDeclaration (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/scope/index.js:444:14)\\n    at Object.BlockScoped (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/scope/index.js:189:28)\\n    at Object.newFn (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/visitors.js:230:17)\\n    at NodePath._call (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/path/context.js:53:20)\\n    at NodePath.call (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/path/context.js:36:14)\\n    at NodePath.visit (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/path/context.js:88:12)\\n    at TraversalContext.visitQueue (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/context.js:118:16)\\n    at TraversalContext.visitMultiple (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/context.js:85:17)\\n    at TraversalContext.visit (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/context.js:144:19)\\n    at Function.traverse.node (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/index.js:94:17)\\n    at NodePath.visit (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/path/context.js:95:18)\\n    at TraversalContext.visitQueue (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/context.js:118:16)\\n    at TraversalContext.visitMultiple (/Users/joona/git/chat-app/client/node_modules/@babel/traverse/lib/context.js:85:17)\")},53:function(e,t,n){e.exports=n(112)},60:function(e,t,n){}},[[53,2,1]]]);","extractedComments":[]}