{"map":"{\"version\":3,\"sources\":[\"/Users/joona/git/chat-app/client/src/components/usernames.js\",\"/Users/joona/git/chat-app/client/src/components/messages.js\",\"/Users/joona/git/chat-app/client/src/components/users.js\",\"/Users/joona/git/chat-app/client/src/components/login.js\",\"/Users/joona/git/chat-app/client/src/components/authentication-bar.js\",\"/Users/joona/git/chat-app/client/src/App.js\",\"/Users/joona/git/chat-app/client/src/serviceWorker.js\",\"/Users/joona/git/chat-app/client/src/components/socket.js\",\"/Users/joona/git/chat-app/client/src/components/reducer.js\",\"/Users/joona/git/chat-app/client/src/index.js\"],\"names\":[\"nameGetter\",\"Chance\",\"getAName\",\"first\",\"Messages\",\"state\",\"key\",\"getKey\",\"_this\",\"setState\",\"window\",\"scrollTo\",\"document\",\"body\",\"scrollHeight\",\"i\",\"react_default\",\"a\",\"createElement\",\"id\",\"this\",\"props\",\"messages\",\"map\",\"msg\",\"Component\",\"Users\",\"_ref\",\"users\",\"user\",\"name\",\"loginService\",\"Object\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"ctx\",\"res\",\"wrap\",\"_context\",\"prev\",\"next\",\"axios\",\"post\",\"sent\",\"abrupt\",\"data\",\"stop\",\"_x\",\"apply\",\"arguments\",\"AuthBar\",\"app\",\"_app$props\",\"logged\",\"username\",\"password\",\"onClick\",\"logout\",\"onSubmit\",\"login\",\"type\",\"value\",\"onChange\",\"handleNameChange\",\"handlePwChange\",\"href\",\"App\",\"EmojiConvertor\",\"emoji\",\"sendIn\",\"event\",\"preventDefault\",\"_this$props\",\"dispatch\",\"message\",\"handleChange\",\"target\",\"_this$props2\",\"_dispatch\",\"localStorage\",\"setItem\",\"JSON\",\"stringify\",\"t0\",\"console\",\"log\",\"emojiClick\",\"code\",\"_this$props3\",\"replace_colons\",\"concat\",\"showEmoji\",\"loggedUserJSON\",\"getItem\",\"parse\",\"_this$props4\",\"persons\",\"className\",\"messages_Messages\",\"authentication_bar\",\"components_users\",\"dist_default\",\"onEmojiClick\",\"action\",\"autoComplete\",\"class\",\"connect\",\"loggedUser\",\"Boolean\",\"location\",\"hostname\",\"match\",\"socket\",\"io\",\"confSocket\",\"on\",\"changeName\",\"newPersons\",\"includes\",\"indexOf\",\"push\",\"reducer\",\"length\",\"undefined\",\"objectSpread\",\"emit\",\"removeItem\",\"__webpack_require__\",\"d\",\"__webpack_exports__\",\"src_socket\",\"store\",\"createStore\",\"ReactDOM\",\"render\",\"es\",\"src_App_0\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import Chance from 'chance'\\n\\nconst nameGetter = new Chance()\\n\\nexport const getAName = () => nameGetter.first()\",\"import React, {Component} from 'react'\\n\\nexport default class Messages extends Component {\\n  state = {\\n    key: 0,\\n  }\\n\\n  componentDidUpdate() {\\n    // TODO dont scroll always\\n    window.scrollTo(0, document.body.scrollHeight)\\n  }\\n\\n  getKey = () => {\\n    this.setState({key: this.state.key++})\\n    return this.state.key\\n  }\\n\\n  render () {\\n    var i = 0\\n    return (\\n      <ul id='messages'>\\n        {this.props.messages.map(msg => \\n          <li key={i++}>{msg}</li>\\n        )}\\n      </ul>\\n    )\\n  }\\n}\",\"import React from 'react'\\n\\nconst Users = ({users, user}) => {\\n    var i = 0\\n    return (\\n        <ul id=\\\"users\\\">\\n            <li>Online users:</li>\\n            {users.map(name => \\n                {if (name === user)\\n                    return <li key={i++}>{name} <span id='me'>(you)</span></li>\\n                else\\n                    return <li key={i++}>{name}</li>\\n                }\\n            )}\\n        </ul>\\n    )\\n}\\n\\nexport default Users\",\"import axios from 'axios'\\nconst baseUrl = '/api/login'\\n\\nconst loginService = async (ctx) => {\\n    const res = await axios.post(baseUrl, ctx)\\n    return res.data\\n}\\n\\nexport default loginService\",\"import React from 'react'\\n\\nconst AuthBar = ({app}) => {\\n    const {logged, username, password} = app.props\\n    if (logged) {\\n      return (\\n        <button id=\\\"users\\\" onClick={app.logout}>Log out</button>\\n      )\\n    }\\n\\n    return (\\n      <div>\\n        <form onSubmit={app.login}>\\n          Username:\\n          <input type=\\\"text\\\" value={username} onChange={app.handleNameChange}></input>\\n          Password:\\n          <input type=\\\"password\\\" value={password} onChange={app.handlePwChange}></input>\\n          <button>Log in</button>\\n        </form>\\n\\n        <a href=\\\"/api/signup\\\"><button>Register</button></a>\\n      </div>\\n    )\\n  }\\n\\n  export default AuthBar\",\"import React, { Component } from 'react'\\nimport './App.css'\\nimport {getAName} from './components/usernames'\\nimport {connect} from 'react-redux'\\nimport Messages from './components/messages'\\nimport Users from './components/users'\\nimport loginService from './components/login'\\nimport AuthBar from './components/authentication-bar'\\nimport EmojiPicker from 'emoji-picker-react'\\nimport EmojiConvertor from 'emoji-js'\\n\\nvar emoji = new EmojiConvertor()\\n\\nclass App extends Component {\\n  state = {\\n    emoji: false,\\n  }\\n\\n  componentDidMount() {\\n    const loggedUserJSON = window.localStorage.getItem('loggedUserJSON')\\n    const {dispatch} = this.props\\n    if (loggedUserJSON) {\\n      const user = JSON.parse(loggedUserJSON)\\n      dispatch({type: 'LOGIN', user})\\n    } else {\\n      const name = getAName()\\n      dispatch({type: 'username', name})\\n    }\\n  }\\n\\n  sendIn = (event) => {\\n    event.preventDefault()\\n    const {dispatch, user, message} = this.props\\n    dispatch({type: 'chat message', msg: user+': '+message})\\n  }\\n\\n  handleChange = (event) => {\\n    const {dispatch} = this.props\\n    dispatch({type: 'typing', msg: event.target.value})\\n  }\\n\\n  handleNameChange = (event) => {\\n    const {dispatch} = this.props\\n    dispatch({type: 'TYPING_USERNAME', username: event.target.value})\\n  }\\n\\n  handlePwChange = (event) => {\\n    const {dispatch} = this.props\\n    dispatch({type: 'TYPING_PASSWORD', password: event.target.value})\\n  }\\n\\n  login = async (event) => {\\n    event.preventDefault()\\n    try {\\n      const {dispatch, username, password} = this.props\\n      const user = await loginService({\\n        username,\\n        password\\n      })\\n      \\n      dispatch({type: 'LOGIN', user})\\n      window.localStorage.setItem('loggedUserJSON', JSON.stringify(user))\\n    } catch (e) {\\n      const {dispatch} = this.props\\n      console.log('login failed')\\n      dispatch({type: 'FAILED_LOGIN'})\\n    }\\n  }\\n\\n  logout = (event) => {\\n    const {dispatch} = this.props\\n    const name = getAName()\\n    dispatch({type: 'LOGOUT', name})\\n  }\\n\\n  emojiClick = (code, emoji) => {\\n    const {dispatch, message} = this.props\\n    let emojiPic = new EmojiConvertor().replace_colons(`:${emoji.name}:`)\\n    dispatch({type: 'typing', msg: message+emojiPic})\\n  }\\n\\n  showEmoji = () => {\\n    this.setState({emoji: !this.state.emoji})\\n    console.log(this.state.emoji)\\n  }\\n \\n  render() {\\n    const {message, messages, persons, user} = this.props\\n    return (\\n      <div className=\\\"App\\\">\\n        <Messages messages={messages}/>\\n        <div id=\\\"rightBar\\\">\\n          <AuthBar app={this} />\\n          <Users users={persons} user={user} />\\n        </div>\\n        <EmojiPicker onEmojiClick={this.emojiClick} />\\n        <form action=\\\"\\\" onSubmit={this.sendIn} className=\\\"message\\\">\\n          <input \\n            id=\\\"m\\\" \\n            autoComplete=\\\"off\\\" \\n            value={message} \\n            onChange={this.handleChange}\\n          />\\n          <i class=\\\"far fa-grin\\\" onClick={showEmoji}></i>\\n          <button>Send</button>\\n        </form>\\n      </div>\\n    );\\n  }\\n}\\n\\nconst mapStateToProps = state => ({\\n  persons: state.persons,\\n  messages: state.messages,\\n  message: state.message,\\n  user: state.user,\\n  logged: state.logged,\\n  username: state.username,\\n  password: state.password,\\n  loggedUser: state.user\\n})\\n\\nexport default connect(mapStateToProps)(App)\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import io from 'socket.io-client'\\n\\nconst socket = io('http://localhost:3001')\\n\\nconst confSocket = dispatch => {\\n    socket.on('chat message', msg => {\\n        dispatch({type: 'socket message', msg})\\n    })\\n\\n    socket.on('users', users => {\\n        dispatch({type: 'users', users})\\n    })\\n\\n    return socket\\n}\\n\\nexport default confSocket\",\"import {socket} from '../index'\\n\\nconst changeName = (state, name) => {\\n    const newPersons = state.persons\\n    if (newPersons.includes(state.user)) {\\n        newPersons[newPersons.indexOf(state.user)] = name\\n    } else {\\n        newPersons.push(name)\\n    }\\n    return newPersons\\n}\\n\\nconst reducer = (\\n    state = {\\n        persons: [],\\n        messages: [],\\n        message: '',\\n        user: '',\\n        logged: false,\\n        username: '',\\n        password: '',\\n        loggedUser: null\\n    },\\n    action\\n) => {\\n    switch (action.type) {\\n        case 'chat message':\\n            state = {...state, message: ''}\\n            socket && socket.emit('chat message', action.msg)\\n            break\\n        case 'username':\\n            state = {...state, user: action.name}\\n            socket && socket.emit('connected', state.user)\\n            break\\n        case 'typing':\\n            state = {...state, message: action.msg}\\n            break\\n        case 'socket message':\\n            state = {...state, messages: state.messages.concat(action.msg)}\\n            break\\n        case 'users':\\n            state = {...state, persons: action.users}\\n            break\\n        case 'TYPING_USERNAME':\\n            state = {...state, username: action.username}\\n            break\\n        case 'TYPING_PASSWORD':\\n            state = {...state, password: action.password}\\n            break\\n        case 'LOGIN':\\n            socket && socket.emit('log', action.user.username)\\n            state = {...state, persons: changeName(state, action.user.username), user: action.user.username, username: '', password: '', loggedUser: action.user, logged: true}\\n            break\\n        case 'LOGOUT':\\n            window.localStorage.removeItem('loggedUserJSON')\\n            socket && socket.emit('log', action.name)\\n            state = {...state, persons: changeName(state, action.name), user: action.name, loggedUser: null, logged: false}\\n            break\\n        case 'FAILED_LOGIN':\\n            state = {...state, username: '', password: ''}\\n            break\\n    }\\n    return state\\n}\\n\\nexport default reducer\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\nimport confSocket from './components/socket'\\nimport {createStore} from 'redux'\\nimport reducer from './components/reducer'\\nimport {Provider} from 'react-redux'\\nconst store = createStore(reducer)\\n\\nexport const socket = confSocket(store.dispatch)\\n\\nReactDOM.render(\\n    <Provider store={store}>\\n        <App />\\n    </Provider>, \\n    document.getElementById('root')\\n);\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{114:function(e,t){},117:function(e,t,a){\"use strict\";a.r(t);var n=a(0),s=a.n(n),r=a(49),o=a.n(r),c=a(7),u=a.n(c),i=a(13),l=a(14),m=a(15),p=a(19),g=a(16),d=a(20),h=(a(63),a(50)),f=new(a.n(h).a),w=function(){return f.first()},b=a(18),v=function(e){function t(){var e,a;Object(l.a)(this,t);for(var n=arguments.length,s=new Array(n),r=0;r<n;r++)s[r]=arguments[r];return(a=Object(p.a)(this,(e=Object(g.a)(t)).call.apply(e,[this].concat(s)))).state={key:0},a.getKey=function(){return a.setState({key:a.state.key++}),a.state.key},a}return Object(d.a)(t,e),Object(m.a)(t,[{key:\"componentDidUpdate\",value:function(){window.scrollTo(0,document.body.scrollHeight)}},{key:\"render\",value:function(){var e=0;return s.a.createElement(\"ul\",{id:\"messages\"},this.props.messages.map(function(t){return s.a.createElement(\"li\",{key:e++},t)}))}}]),t}(n.Component),O=function(e){var t=e.users,a=e.user,n=0;return s.a.createElement(\"ul\",{id:\"users\"},s.a.createElement(\"li\",null,\"Online users:\"),t.map(function(e){return e===a?s.a.createElement(\"li\",{key:n++},e,\" \",s.a.createElement(\"span\",{id:\"me\"},\"(you)\")):s.a.createElement(\"li\",{key:n++},e)}))},y=a(53),E=a.n(y),k=function(){var e=Object(i.a)(u.a.mark(function e(t){var a;return u.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,E.a.post(\"/api/login\",t);case 2:return a=e.sent,e.abrupt(\"return\",a.data);case 4:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),j=function(e){var t=e.app,a=t.props,n=a.logged,r=a.username,o=a.password;return n?s.a.createElement(\"button\",{id:\"users\",onClick:t.logout},\"Log out\"):s.a.createElement(\"div\",null,s.a.createElement(\"form\",{onSubmit:t.login},\"Username:\",s.a.createElement(\"input\",{type:\"text\",value:r,onChange:t.handleNameChange}),\"Password:\",s.a.createElement(\"input\",{type:\"password\",value:o,onChange:t.handlePwChange}),s.a.createElement(\"button\",null,\"Log in\")),s.a.createElement(\"a\",{href:\"/api/signup\"},s.a.createElement(\"button\",null,\"Register\")))},N=a(54),S=a.n(N),C=a(28),I=a.n(C),U=(new I.a,function(e){function t(){var e,a;Object(l.a)(this,t);for(var n=arguments.length,s=new Array(n),r=0;r<n;r++)s[r]=arguments[r];return(a=Object(p.a)(this,(e=Object(g.a)(t)).call.apply(e,[this].concat(s)))).state={emoji:!1},a.sendIn=function(e){e.preventDefault();var t=a.props;(0,t.dispatch)({type:\"chat message\",msg:t.user+\": \"+t.message})},a.handleChange=function(e){(0,a.props.dispatch)({type:\"typing\",msg:e.target.value})},a.handleNameChange=function(e){(0,a.props.dispatch)({type:\"TYPING_USERNAME\",username:e.target.value})},a.handlePwChange=function(e){(0,a.props.dispatch)({type:\"TYPING_PASSWORD\",password:e.target.value})},a.login=function(){var e=Object(i.a)(u.a.mark(function e(t){var n,s,r,o,c,i;return u.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),e.prev=1,n=a.props,s=n.dispatch,r=n.username,o=n.password,e.next=5,k({username:r,password:o});case 5:c=e.sent,s({type:\"LOGIN\",user:c}),window.localStorage.setItem(\"loggedUserJSON\",JSON.stringify(c)),e.next=15;break;case 10:e.prev=10,e.t0=e.catch(1),i=a.props.dispatch,console.log(\"login failed\"),i({type:\"FAILED_LOGIN\"});case 15:case\"end\":return e.stop()}},e,this,[[1,10]])}));return function(t){return e.apply(this,arguments)}}(),a.logout=function(e){(0,a.props.dispatch)({type:\"LOGOUT\",name:w()})},a.emojiClick=function(e,t){var n=a.props;(0,n.dispatch)({type:\"typing\",msg:n.message+(new I.a).replace_colons(\":\".concat(t.name,\":\"))})},a.showEmoji=function(){a.setState({emoji:!a.state.emoji}),console.log(a.state.emoji)},a}return Object(d.a)(t,e),Object(m.a)(t,[{key:\"componentDidMount\",value:function(){var e=window.localStorage.getItem(\"loggedUserJSON\"),t=this.props.dispatch;e?t({type:\"LOGIN\",user:JSON.parse(e)}):t({type:\"username\",name:w()})}},{key:\"render\",value:function(){var e=this.props,t=e.message,a=e.messages,n=e.persons,r=e.user;return s.a.createElement(\"div\",{className:\"App\"},s.a.createElement(v,{messages:a}),s.a.createElement(\"div\",{id:\"rightBar\"},s.a.createElement(j,{app:this}),s.a.createElement(O,{users:n,user:r})),s.a.createElement(S.a,{onEmojiClick:this.emojiClick}),s.a.createElement(\"form\",{action:\"\",onSubmit:this.sendIn,className:\"message\"},s.a.createElement(\"input\",{id:\"m\",autoComplete:\"off\",value:t,onChange:this.handleChange}),s.a.createElement(\"i\",{class:\"far fa-grin\",onClick:showEmoji}),s.a.createElement(\"button\",null,\"Send\")))}}]),t}(n.Component)),G=Object(b.b)(function(e){return{persons:e.persons,messages:e.messages,message:e.message,user:e.user,logged:e.logged,username:e.username,password:e.password,loggedUser:e.user}})(U);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var L=a(55),A=a.n(L)()(\"http://localhost:3001\"),P=function(e){return A.on(\"chat message\",function(t){e({type:\"socket message\",msg:t})}),A.on(\"users\",function(t){e({type:\"users\",users:t})}),A},x=a(17),D=a(4),J=function(e,t){var a=e.persons;return a.includes(e.user)?a[a.indexOf(e.user)]=t:a.push(t),a},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{persons:[],messages:[],message:\"\",user:\"\",logged:!1,username:\"\",password:\"\",loggedUser:null},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case\"chat message\":e=Object(D.a)({},e,{message:\"\"}),R&&R.emit(\"chat message\",t.msg);break;case\"username\":e=Object(D.a)({},e,{user:t.name}),R&&R.emit(\"connected\",e.user);break;case\"typing\":e=Object(D.a)({},e,{message:t.msg});break;case\"socket message\":e=Object(D.a)({},e,{messages:e.messages.concat(t.msg)});break;case\"users\":e=Object(D.a)({},e,{persons:t.users});break;case\"TYPING_USERNAME\":e=Object(D.a)({},e,{username:t.username});break;case\"TYPING_PASSWORD\":e=Object(D.a)({},e,{password:t.password});break;case\"LOGIN\":R&&R.emit(\"log\",t.user.username),e=Object(D.a)({},e,{persons:J(e,t.user.username),user:t.user.username,username:\"\",password:\"\",loggedUser:t.user,logged:!0});break;case\"LOGOUT\":window.localStorage.removeItem(\"loggedUserJSON\"),R&&R.emit(\"log\",t.name),e=Object(D.a)({},e,{persons:J(e,t.name),user:t.name,loggedUser:null,logged:!1});break;case\"FAILED_LOGIN\":e=Object(D.a)({},e,{username:\"\",password:\"\"})}return e};a.d(t,\"socket\",function(){return R});var _=Object(x.b)(T),R=P(_.dispatch);o.a.render(s.a.createElement(b.a,{store:_},s.a.createElement(G,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},56:function(e,t,a){e.exports=a(117)},63:function(e,t,a){}},[[56,2,1]]]);","extractedComments":[]}